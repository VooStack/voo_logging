// Mocks generated by Mockito 5.4.6 from annotations
// in voo_logging/test/features/devtools_extension/data/repositories/devtools_log_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:voo_logging/features/devtools_extension/data/datasources/devtools_log_datasource.dart' as _i2;
import 'package:voo_logging/features/logging/data/models/log_entry_model.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [DevToolsLogDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDevToolsLogDataSource extends _i1.Mock implements _i2.DevToolsLogDataSource {
  MockDevToolsLogDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.LogEntryModel> get logStream =>
      (super.noSuchMethod(Invocation.getter(#logStream), returnValue: _i3.Stream<_i4.LogEntryModel>.empty()) as _i3.Stream<_i4.LogEntryModel>);

  @override
  List<_i4.LogEntryModel> getCachedLogs() =>
      (super.noSuchMethod(Invocation.method(#getCachedLogs, []), returnValue: <_i4.LogEntryModel>[]) as List<_i4.LogEntryModel>);

  @override
  void clearCache() => super.noSuchMethod(Invocation.method(#clearCache, []), returnValueForMissingStub: null);
}
